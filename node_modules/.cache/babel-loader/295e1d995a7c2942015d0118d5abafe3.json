{"ast":null,"code":"var _jsxFileName = \"/Users/Ose/Documents/Osemwengie/reactproj/reactnd-project-myreads-starter/src/Search.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nvar Search = function Search(props) {\n  return React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Close\")), React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: props.searchItem,\n    placeholder: \"Search by title or author\",\n    onChange: props.searchForBooks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nSearch.propTypes = {\n  searchItem: PropTypes.string.isRequired,\n  searchForBooks: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/Ose/Documents/Osemwengie/reactproj/reactnd-project-myreads-starter/src/Search.js"],"names":["React","PropTypes","Link","Search","props","searchItem","searchForBooks","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAFf;AAGE,IAAA,WAAW,EAAC,2BAHd;AAIE,IAAA,QAAQ,EAAED,KAAK,CAACE,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,CADF,EAsBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF;AA4BD,CA7BD;;AA+BAH,MAAM,CAACI,SAAP,GAAmB;AACjBF,EAAAA,UAAU,EAAEJ,SAAS,CAACO,MAAV,CAAiBC,UADZ;AAEjBH,EAAAA,cAAc,EAAEL,SAAS,CAACS,IAAV,CAAeD;AAFd,CAAnB;AAKA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Search = props => {\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to=\"/\">\n          <button className=\"close-search\">Close</button>\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n          <input\n            type=\"text\"\n            value={props.searchItem}\n            placeholder=\"Search by title or author\"\n            onChange={props.searchForBooks}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\"></ol>\n      </div>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchItem: PropTypes.string.isRequired,\n  searchForBooks: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}